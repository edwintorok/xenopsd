(* -*- tuareg -*- *)
#require "unix"

let flags = function
| [] -> ""
| pkgs -> 
  let cmd = "ocamlfind ocamlc -verbose" ^ (
    List.fold_left (fun acc pkg -> acc ^ " -package " ^ pkg) "" pkgs
  ) in
  let ic = Unix.open_process_in
    (cmd ^ " | grep -oEe '-ppx (\"([^\"\\]|\\.)+\"|\w+)'")
  in
  let rec go ic acc =
    try go ic (acc ^ " " ^ input_line ic) with End_of_file -> close_in ic; acc
  in
  go ic ""

let coverage_rewriter ~full =
  let is_coverage = try Unix.getenv "COVERAGE" = "1" with Not_found -> false in
  match is_coverage, full with
  | true, true -> "(preprocess (pps (bisect_ppx -simple-cases)))"
  | true, _    -> "bisect_ppx -simple-cases"
  | _          -> ""

let rewriters = ["ppx_deriving_rpc"; "ppx_sexp_conv"]

let () = Printf.ksprintf Jbuild_plugin.V1.send {|

(executable
 ((name xenopsd_test)
  (flags (:standard %s))
  (libraries (
    oUnit
    xenopsd))
  %s
  ))

(alias
 ((name runtest)
  (action (run ${exe:xenopsd_test.exe}))))

|} (flags rewriters) (coverage_rewriter ~full:true)

