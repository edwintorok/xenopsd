(* -*- tuareg -*- *)
#require "unix"

let flags = function
  | [] -> ""
  | pkgs ->
    let cmd = "ocamlfind ocamlc -verbose" ^ (
        List.fold_left (fun acc pkg -> acc ^ " -package " ^ pkg) "" pkgs
      ) in
    let ic = Unix.open_process_in
        (cmd ^ " | grep -oEe '-ppx (\"([^\"\\]|\\.)+\"|\\w+)'")
    in
    let rec go ic acc =
      try go ic (acc ^ " " ^ input_line ic) with End_of_file -> close_in ic; acc
    in
    go ic ""

let flags = flags ["ppx_deriving_rpc"]

let coverage_rewriter =
  let is_coverage = try Unix.getenv "BISECT_ENABLE" = "YES" with Not_found -> false in
  if is_coverage then
    "(preprocess (pps (bisect_ppx -conditional)))"
  else
    ""

let () = Printf.ksprintf Jbuild_plugin.V1.send {|
(jbuild_version 1)

(executable (
  (name main)
  (libraries (alcotest
              xapi-stdext-pervasives
              xapi-work-queues))
  (flags (:standard -w -39 %s))
  %s
))

(alias (
  (name runtest)
  (deps (main.exe))
  (action (run ${<}))
))
|} flags coverage_rewriter
